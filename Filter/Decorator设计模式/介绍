  当某个对象的方法不适应业务需求时，通常有2种方式可以对方法进行增强：
    1.编写子类，覆盖需增强的方法。
    2.使用Decorator设计模式对方法进行增强。
  装饰模式又名包装(Wrapper)模式。装饰模式以对客户端透明的方式扩展对象的功能，是继承关系的一个替代方案。装饰模式是在不必改变原类文件和使用继承的情况下，动态的扩展一个对象的功能。它是通过
创建一个包装对象，也就是装饰来包裹真实的对象。有一种情况必须使用Decorator设计模式：即被增强的对象，开发人员只能得到它的对象，无法得到它的class文件。
  Decorator设计模式的实现：
    1.首先看需要被增强对象继承了什么接口或父类，编写一个类也去继承这些接口或父类。
    2.在类中定义一个变量，变量类型即需增强对象的类型。
    3.在类中定义一个构造函数，接收需增强的对象。
    4..覆盖需增强的方法，编写增强的代码。
    
